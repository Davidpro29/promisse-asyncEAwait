function rand(min=0, max=3) {
    min *= 1000;
    max *= 1000;
    return Math.floor(Math.random() * (max - min)+ min);
}

function espera(msg, tempo){
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if(typeof msg !== 'string'){
                reject('Cai no erro do reject');
                return;
            }

            resolve(msg.toUpperCase());
            return;
        }, tempo);
    });
}

// espera('fase 1 ', rand())
//     .then(valor => {
//         console.log(valor)
//         return espera('fase 2', rand())
//     })
//     .then(fase => {
//         console.log(fase);
//         return espera('fase 3', rand());
//     })
//     .then(fase => {
//         console.log(fase);
//     })
//     .then(fase => {
//         console.log('Terminamos na fase:', fase);
//     })
//     .catch(e => console.log(e));


////////////// Com Async e Await

async function executa(){
    try{
        const fase1 = await espera('Fase 1', rand());
        console.log(fase1);
    
        const fase2 = await espera(1, rand());
        console.log(fase2);
    
        const fase3 = await espera('Fase 3', rand());
        console.log(fase3);
    
        console.log('Terminamos na fase:', fase3);
    } catch(e){
        console.log(e);
    }
}

executa();